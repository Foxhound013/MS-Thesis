library(ncdf4)
library(lattice)
library(sp)
library(gstat)
# Example data
fpath <- '/depot/wwtung/data/loganD/wxData/mrms/archive/smaller_sub.nc'
mrms <- ncdf4::nc_open(fpath)
lon <- ncdf4::ncvar_get(mrms, 'longitude')
nlon <- dim(lon)
lat <- ncdf4::ncvar_get(mrms, 'latitude')
nlat <- dim(lat)
time <- ncdf4::ncvar_get(mrms, 'time')
tunits <- ncdf4::ncatt_get(mrms,'time','units')
varName <- 'PrecipRate_0mabovemeansealevel'
precipRate <- ncdf4::ncvar_get(mrms,varName)
precipRate.units <- ncdf4::ncatt_get(mrms,varName, 'units')
fillvalue <- ncatt_get(mrms,varName,"_FillValue")
nc_close(mrms)
nPrecip <-  dim(precipRate)
# data structure is x, y, time
precip_tslice <- precipRate[,,1]
image(precip_tslice)
min(precip_tslice)
max(precip_tslice)
plot(order(precip_tslice))
plot(precip_tslice, pch=16)
grid <- expand.grid(lon=lon, lat=lat)
grid$precip <- as.vector(precip_tslice)
# Now to determine how to interpolate this time slice to a specific location
tmp <- variogram(precip~1, data=grid)
# convert your grid data to spatial points dataframe
coordinates(grid) <- ~lon+lat
# Now to determine how to interpolate this time slice to a specific location
tmp <- variogram(precip~1, data=grid)
tmp
fitted <- fit.variogram(tmp, model='SPH')
fitted <- fit.variogram(tmp, model='Sph')
tmp.model <- vgm(psill=0.15, model='Gau', nugget=0.0001, range=5)
fitted <- fit.variogram(tmp, model=tmp.model)
tmp.model <- vgm(psill=1, model='Gau', nugget=0.0001, range=5)
fitted <- fit.variogram(tmp, model=tmp.model)
plot(tmp, tmp.model)
tmp.model <- vgm(psill=0.3, model='Gau', nugget=0.0001, range=5)
fitted <- fit.variogram(tmp, model=tmp.model)
plot(tmp, model=tmp.model)
summary(tmp.model)
sample_points <- data.frame(lon, lat)
sample_points <- data.frame(lon=['-87.3, -87.35'])
#gridded(grid) = TRUE # make data spatial pixels dataframe
spplot(grid)
gridded(grid) = TRUE # make data spatial pixels dataframe
spplot(grid)
grid@grid@cellsize
tmp <- variogram(precip~1, data=grid)
sample_points <- data.frame(lon=c('-87.3, -87.35'), lat=c('40.56', '40.61'))
View(sample_points)
sample_points <- data.frame(lon=as.numeric(c('-87.3, -87.35')), lat=c('40.56', '40.61'))
sample_points <- data.frame(lon=c(-87.3, -87.35), lat=c(40.56, 40.61))
coordinates(sample_points) <- ~lon+lat
tmp2 <- raster::rasterize(grid)
grid <- expand.grid(lon=lon, lat=lat)
grid$precip <- as.vector(precip_tslice)
# convert your grid data to spatial points dataframe
coordinates(grid) <- ~lon+lat
tmp2 <- raster::rasterize(grid)
gridded(grid) = TRUE # make data spatial pixels dataframe
