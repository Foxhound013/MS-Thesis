barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
pdf('./figures/FrequencyOfNumberOfMissingValues.pdf', width=8)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
png('./figures/FrequencyOfNumberOfMissingValues.png', width=800)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
?png
png('./figures/FrequencyOfNumberOfMissingValues.png', width=750, res=300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
png('./figures/FrequencyOfNumberOfMissingValues.png', res=300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
png('./figures/FrequencyOfNumberOfMissingValues.png', width=8, units='in', res=300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
png("./figures/Plot3.png", width = 4, height = 4, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
png("./figures/Plot3.png", width = 6, height = 4, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90)))
dev.off()
?barchart
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90, cex=.8)))
png("./figures/Plot3.png", width = 6, height = 4, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90, cex=.8)))
dev.off()
png("./figures/Plot3.png", width = 6, height = 4, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90, cex=.4)))
dev.off()
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90, cey=.4)))
png('./figures/FrequencyOfNumberOfMissingValues.png', width=8, units='in', res=300)
dev.off()
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 5, height = 5, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', scales=list(x=list(rot=90, cex=.6)))
dev.off()
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 5, height = 5, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency',
scales=list(x=list(rot=90, cex=.4), y=list(cex=.4)))
dev.off()
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency',
scales=list(x=list(rot=90, cex=.4), y=list(cex=.4))), cex=.4
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 5, height = 5, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', cex=.4,
scales=list(x=list(rot=90, cex=.4), y=list(cex=.4)))
dev.off()
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 5, height = 5, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency', cex=.4,
scales=list(x=list(rot=90, cex=.4)))
dev.off()
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 5, height = 5, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency',
scales=list(x=list(rot=90, cex=.4), y=list(cex=.4)))
dev.off()
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 8, height = 3, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency',
scales=list(x=list(rot=90, cex=.4), y=list(cex=.4)))
dev.off()
png("./figures/FrequencyOfNumberOfMissingValues.png", width = 7, height = 3, units = 'in', res = 300)
barchart(Frequency~Missed, data=missFreq, col='deepskyblue3', main='Frequency of Missing Values',
xlab='Number of Missing Values', ylab='Frequency',
scales=list(x=list(rot=90, cex=.6), y=list(cex=.6)))
dev.off()
View(missById)
#missingness across time alone
missById <- sf_traffic %>% group_by(xdid) %>% transmute(count=sum(is.na(speed)), geometry=geometry) %>% unique
View(missById)
#missingness across time alone
missById <- sf_traffic %>% group_by(xdid) %>% transmute(count=sum(is.na(speed))) %>% unique
tmp <- missById %>% inner_join(sf_traffic)
View(tmp)
# how do these missing values look on a map?
# should be able to merge the missing data by ID with the geometry from the original set
tmp <- traffic[,c('xdid','lon','lat')]
View(tmp)
# how do these missing values look on a map?
# should be able to merge the missing data by ID with the geometry from the original set
tmp <- traffic[,c('xdid')]
traffic[,c('xdid')]
# how do these missing values look on a map?
# should be able to merge the missing data by ID with the geometry from the original set
tmp <- traffic[,c('xdid','lon','lat')] %>% unique
View(tmp)
# how do these missing values look on a map?
# should be able to merge the missing data by ID with the geometry from the original set
xdid.lon.lat <- traffic[,c('xdid','lon','lat')] %>% unique
tmp <- missById %>% inner_join(xdid.lon.lat)
View(tmp)
miss.spatial <- missById %>% inner_join(xdid.lon.lat)
rm(tmp)
miss.spatial <- missById %>% inner_join(xdid.lon.lat, by='xdid')
miss.spatial <- missById %>% inner_join(xdid.lon.lat, by='xdid') %>% st_as_sf(coords=c('lon','lat'), crs=4326)
plot(miss.spatial)
plot(miss.spatial$count)
levelplot(~count, data=miss.spatial)
plot(st_geometry(miss.spatial), col=count)
plot(st_geometry(miss.spatial), col=count, data=miss.spatial)
plot(st_geometry(miss.spatial), col=miss.spatial$count)
plot(st_geometry(miss.spatial), col=miss.spatial$count, pch=16)
plot(st_geometry(miss.spatial), col=miss.spatial$count, pch=16, axes=T)
plot(st_geometry(miss.spatial), col=miss.spatial$count, pch=16, axes=T, key.pos=1)
tmap::tmap_mode('view')
tmap::tm_shape(miss.spatial) + tmap::tm_dots(col='count')
tmap::tm_shape(miss.spatial) + tmap::tm_dots(col='count', breaks=c(0,10,25,50,100,200,500,1000,1400))
library(tmap)
tm_shape(miss.spatial) + tm_dots(col='count', breaks=c(0,10,25,50,100,200,500,1000,1400),size='count')
tm_shape(miss.spatial) + tm_dots(col='count', breaks=c(0,10,25,50,100,200,500,1000,1400))
tm_shape(miss.spatial) +
tm_dots(size='count')
tm_shape(miss.spatial) +
tm_dots(size='count', col='RdBl')
scales::alpha("red", .3)
tm_shape(miss.spatial) +
tm_dots(size='count', col=scales::alpha("red", .3))
?tm_dots
tmaptools::palette_explorer(())
tmaptools::palette_explorer()
sf.colors()
tm_shape(miss.spatial) +
tm_dots(size='count', col='count', palette=sf.colors(5))
tm_shape(miss.spatial) +
tm_dots(size='count', col='count', palette=sf.colors())
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count', palette=sf.colors())
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count', palette=sf.colors()) +
tm_scale_bar()
library(RColorBrewer)
brewer.pal(5, 'RdBu')
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=brewer.pal(5, 'RdBu')) +
tm_scale_bar()
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=brewer.pal(10, 'RdBu')) +
tm_scale_bar()
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=brewer.pal(6, 'RdBu')) +
tm_scale_bar()
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=rev(brewer.pal(6, 'RdBu'))) +
tm_scale_bar()
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=rev(brewer.pal(6, 'RdBu')), breaks=c(0,10,25,50,100,200,500,1000,1400)) +
tm_scale_bar()
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=rev(brewer.pal(8, 'RdBu')), breaks=c(0,10,25,50,100,200,500,1000,1400)) +
tm_scale_bar()
View(miss.spatial)
unique(length(sf_traffic$tstamp))
factor(sf_traffic$tstamp)
length(unique(sf_traffic$tstamp))
# Missing ratio, another way of encoding the amount missing
miss.spatial$ratio <- miss.spatial$count/length(unique(sf_traffic$tstamp))
View(miss.spatial)
# Missing ratio, another way of encoding the amount missing
miss.spatial$ratio <- miss.spatial$count/length(unique(sf_traffic$tstamp)) %>% round(4)
# Missing ratio, another way of encoding the amount missing
miss.spatial$ratio <- miss.spatial$count/length(unique(sf_traffic$tstamp)) %>% round(ratio,4)
# Missing ratio, another way of encoding the amount missing
miss.spatial$ratio <- round(miss.spatial$count/length(unique(sf_traffic$tstamp)), 4)
quantile(miss.spatial$ratio)
?quantile
quantile(miss.spatial$ratio, probs=seq(0,1,0.01))
plot(quantile(miss.spatial$ratio, probs=seq(0,1,0.01)))
missingQ <- quantile(miss.spatial$ratio, probs=seq(0,1,0.01))
qqmath(missingQ)
plot(missingQ)
hist(missingQ)
plot(missingQ)
plot(missingQ, title='d')
plot(missingQ, main='d')
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Probability')
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles')
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3')
missingQ <- quantile(miss.spatial$ratio, probs=seq(0,1,0.001))
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3')
missingQ <- quantile(miss.spatial$ratio, probs=seq(0,1,0.1))
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3')
0
missingQ <- quantile(miss.spatial$ratio, probs=seq(0,1,0.01))
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3')
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', res = 300)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3')
dev.off()
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', res = 300)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
dev.off()
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5,
scales=list(x=list(rot=90, cex=.6), y=list(cex=.6)))
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
warnings()
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
?png
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', quality = 100)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', quality = 1)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', quality = 100%)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in')
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', res = 300)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
dev.off()
?plot
xyplot(~missingQ)
xyplot(missingQ)
xyplot(~missingQ, data=missingQ)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.5)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.9)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.9, cex.axis=.9, cex.lab=.9)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', res = 300)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.9, cex.axis=.9, cex.lab=.9)
dev.off()
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', res = 300)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.9, cex.axis=.7, cex.lab=.7)
dev.off()
plot(missingQ*100, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.9, cex.axis=.7, cex.lab=.7)
png("./figures/missingRatio_QuantDistro.png", width = 4, height = 4, units = 'in', res = 300)
plot(missingQ, main='Quantile Distribution', ylab='Missingness Ratio (Missing/Possible)',
xlab='Quantiles', pch=16, col='deepskyblue3', cex=.5, cex.main=.9, cex.axis=.7, cex.lab=.7)
dev.off()
View(na_tseries)
# total missingness for each time slice to check for patterns there
na_tseries %>% group_by(tstamp) %>% aggregate(totalNA=sum(count))
# total missingness for each time slice to check for patterns there
na_tseries %>% group_by(tstamp) %>% aggregate(count,sum)
# total missingness for each time slice to check for patterns there
na_tseries %>%
group_by(tstamp) %>%
summarise(totalNA = sum(count))
# total missingness for each time slice to check for patterns there
totalMissing_tseries <- na_tseries %>%
group_by(tstamp) %>% summarise(totalNA = sum(count))
View(totalMissing_tseries)
xyplot(tstamp~totalNA, data=totalMissing_tseries)
xyplot(totalNA~tstamp, data=totalMissing_tseries)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3')
?xyplot
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,200))
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150))
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time')
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time',
ylab='Missing Value Count', xlab='Time Stamp')
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp')
loess(totalNa~tstamp, data=totalMissing_tseries)
loess(totalNA~tstamp, data=totalMissing_tseries)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time',
ylab='Missing Value Count', xlab='Time Stamp')
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp')
loess(totalNA~tstamp, data=totalMissing_tseries, span=0.10)
loess(totalNA~as.numeric(tstamp), data=totalMissing_tseries, span=0.10)
loess(totalNA~as.numeric(tstamp), data=totalMissing_tseries)
lo <- loess(totalNA~as.numeric(tstamp), data=totalMissing_tseries)
lines(totalMissing_tseries$tstamp, lo$fitted)
plot(fitted)
plot(lo$fitted)
as.numeric(tstamp)
as.numeric(totalMissing_tseries$tstamp)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"))
xyplot(totalNA~as.numeric(tstamp), data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"))
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3',
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"))
, ylim=c(0,150)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"))
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col=c('red','deepskyblue3'), ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"))
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red')
png('./figures/missingDatabyTime_smooth_ylim.png', width=300)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red')
dev.off()
png('./figures/missingDatabyTime_smooth_ylim.png', width=700, height=700)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red')
dev.off()
5
5
png('./figures/missingDatabyTime_smooth_ylim.png', width=500, height=500)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red')
dev.off()
png('./figures/missingDatabyTime.png')
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time',
ylab='Missing Value Count', xlab='Time Stamp')
dev.off()
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red', lwd=4)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red', lwd=2)
png('./figures/missingDatabyTime_smooth_ylim.png', width=500, height=500)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red', lwd=2)
dev.off()
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red', lwd=2,
alpha=.6)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time',
ylab='Missing Value Count', xlab='Time Stamp', alpha=.6)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time',
ylab='Missing Value Count', xlab='Time Stamp', alpha=.4)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', main='Missing Data by Time',
ylab='Missing Value Count', xlab='Time Stamp', alpha=.5)
xyplot(totalNA~tstamp, data=totalMissing_tseries, pch=16, col='deepskyblue3', ylim=c(0,150),
main='Missing Data by Time', ylab='Missing Value Count', xlab='Time Stamp',
type=c("p","smooth"), col.line='red', lwd=2,
alpha=.5)
acf(sf_tweets$speed)
acf(sf_traffic$speed)
summary(totalMissing_tseries$totalNA)
?sample_n
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
# This script has
?sample_n
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
# This script has been developed to get a sample of the traffic data
fpath <- 'C:/Users/Downi/Google Drive/Research/Thesis/traffic_data/2018-04-25_I65.csv'
traffic <- read.csv(fpath, header=F, stringsAsFactors=F,
col.names=c('version', 'xdid', 'tstamp',
'speed', 'roadNumber', 'roadName', 'county', 'miles', 'lat', 'lon',
'bearing', 'district', 'subdistrict', 'prevXdid', 'nextXdid'))
traffic[1,1] <- sub(pattern='ï»¿',replacement='', x=traffic[1,1])
traffic$tstamp <- lubridate::as_datetime(traffic$tstamp)
# Need to characterize the missingness by space and time.
sf_traffic <- st_as_sf(traffic, coords=c('lon', 'lat'), crs=4326)
glimpse(sf_traffic) # check out the data
sf_traffic <- complete(sf_traffic, xdid, tstamp)
# some of the metadata can very quickly and easily be filled
sf_traffic <- sf_traffic %>% group_by(xdid) %>%
fill(c(version, roadNumber, roadName, county, miles, bearing, district,
subdistrict, prevXdid, nextXdid, geometry))
#
byIdandTime <- sf_traffic %>% group_by(xdid, tstamp)
tmp <- sample_n(byIdandTime, 2, replace=T)
View(tmp)
#
byId <- sf_traffic %>% group_by(xdid)
tmp <- sample_n(byIdandTime, 2, replace=T)
View(tmp)
tmp <- sample_n(byId, 2, replace=T)
View(tmp)
tmp <- sample_n(byId, 80, replace=T)
traffic_sub <- sample_n(byId, 80, replace=T)
xyplot(speed~tstamp | factor(xdid), data=traffic_sub)
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, layout=c(5,1,1))
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, layout=c(1,6,1))
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,6,1))
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,2,1))
View(tmp)
traffic_sub[order(traffic_sub$tstamp), ]
# order the data by tstamp
traffic_sub <- traffic_sub[order(traffic_sub$tstamp), ]
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,2,1))
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,6,1))
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,6))
70320/6
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1))
pdf('./figures/sampleSpeeds_80perID.pdf')
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1))
dev.off()
pdf('./figures/sampleSpeeds_80perID.pdf')
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1),
par.strip.text=list(cex=.8))
dev.off()
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1),
par.strip.text=list(cex=.8))
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1),
par.strip.text=list(cex=.8), main='80 Random Samples by XDID', xlab='Time Stamp',
ylab='Speed')
pdf('./figures/sampleSpeeds_80perID.pdf')
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1),
par.strip.text=list(cex=.8), main='80 Random Samples by XDID', xlab='Time Stamp',
ylab='Speed')
dev.off()
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10,1),
par.strip.text=list(cex=.7), main='80 Random Samples by XDID', xlab='Time Stamp',
ylab='Speed')
pdf('./figures/sampleSpeeds_80perID.pdf')
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10),
par.strip.text=list(cex=.7), main='80 Random Samples by XDID', xlab='Time Stamp',
ylab='Speed')
dev.off()
pdf('./figures/sampleSpeeds_80perID.pdf')
xyplot(speed~tstamp | factor(xdid), data=traffic_sub, type='l', layout=c(1,10),
par.strip.text=list(cex=.7), main='80 Random Samples by XDID', xlab='Time Stamp',
ylab='Speed (MPH)')
dev.off()
min(sf_traffic$tstamp)
max(sf_traffic$tstamp)
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
# library(zoo)
# library(xts)
# This script is intended to explore the missingness in the traffic speed data from INRIX
fpath <- 'C:/Users/Downi/Google Drive/Research/Thesis/traffic_data/2018-04-25_I65.csv'
traffic <- read.csv(fpath, header=F, stringsAsFactors=F,
col.names=c('version', 'xdid', 'tstamp',
'speed', 'roadNumber', 'roadName', 'county', 'miles', 'lat', 'lon',
'bearing', 'district', 'subdistrict', 'prevXdid', 'nextXdid'))
traffic[1,1] <- sub(pattern='ï»¿',replacement='', x=traffic[1,1])
traffic$tstamp <- lubridate::as_datetime(traffic$tstamp)
# Need to characterize the missingness by space and time.
sf_traffic <- st_as_sf(traffic, coords=c('lon', 'lat'), crs=4326)
glimpse(sf_traffic) # check out the data
# To get a feel for the missigness of the data, we need to create a time series
# that is complete on this range and fill in the rows with NA by groups (xdid)
# tidyr will help with its complete function
sf_traffic <- complete(sf_traffic, xdid, tstamp)
sf_traffic[which(is.na(sf_traffic$speed)),] # get a quick look at missing columns
# some of the metadata can very quickly and easily be filled
sf_traffic <- sf_traffic %>% group_by(xdid) %>%
fill(c(version, roadNumber, roadName, county, miles, bearing, district,
subdistrict, prevXdid, nextXdid, geometry))
unique(sf_traffic$xdid)
length(unique(sf_traffic$xdid))
View(sf_traffic)
length(sf_traffic$tstamp)
# Spatial missingness, count the NA's for each xdid
na_tseries <- sf_traffic %>% group_by(xdid, tstamp) %>% transmute(count=sum(is.na(speed)))
View(na_tseries)
View(sf_traffic)
#missingness across time alone
missById <- sf_traffic %>% group_by(xdid) %>% transmute(count=sum(is.na(speed))) %>% unique
# how do these missing values look on a map?
# should be able to merge the missing data by ID with the geometry from the original set
xdid.lon.lat <- traffic[,c('xdid','lon','lat')] %>% unique
miss.spatial <- missById %>% inner_join(xdid.lon.lat, by='xdid') %>% st_as_sf(coords=c('lon','lat'), crs=4326)
tmap_mode('view')
tm_shape(miss.spatial) +
tm_dots(col='count', breaks=c(0,10,25,50,100,200,500,1000,1400))
tm_shape(miss.spatial) +
tm_dots(title='Number of Missing Values', size='count', col='count',
palette=rev(brewer.pal(8, 'RdBu')), breaks=c(0,10,25,50,100,200,500,1000,1400)) +
tm_scale_bar()
