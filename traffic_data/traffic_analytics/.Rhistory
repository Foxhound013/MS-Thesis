# fix up the data
traffic$tstamp <- as.POSIXct(traffic$tstamp, tz='UTC')
#traffic <- complete(traffic, xdid, tstamp) # Complete may not be feasible for much larger data . . .
# 39,283,200 obs before complete
# 39,283,200 obs after complete
# i.e. no missing data! :D But how many for each confidence bin?
traffic <- setDT(traffic)
?setDT
glimpse(traffic)
?st_as_sf
tmp <- st_as_sf(traffic, coords=c('lon', 'lat'))
summary(tmp)
rm(tmp)
gc()
gc()
gc()
head(traffic)
length(unique(xdid))
length(unique(traffic$xdid))
# How many segments are there in total
totalSegs <- length(unique(traffic$xdid))
pdf('./figures/speedsByConfidence.pdf')
xyplot(speed~tstamp | factor(score), data=traffic, layout=c(1,3))
dev.off()
dev.off()
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
library(data.table)
fpath <- 'C:/Users/Downi/Desktop/2018-04-25_I65_May.csv' # can't read from G-drive, causes issues
traffic <- fread(input=fpath)
# fix up the data
traffic$tstamp <- as.POSIXct(traffic$tstamp, tz='UTC')
#traffic <- complete(traffic, xdid, tstamp) # Complete may not be feasible for much larger data . . .
# 39,283,200 obs before complete
# 39,283,200 obs after complete
# i.e. no missing data! :D But how many for each confidence bin?
traffic <- setDT(traffic)
glimpse(traffic)
# How many segments are there in total
totalSegs <- length(unique(traffic$xdid))
pdf('./figures/speedsByConfidence.pdf')
xyplot(speed~tstamp | factor(score), data=traffic, layout=c(1,3))
dev.off()
update.packages()
pdf('./figures/tmp.pdf')
plot(1,2)
dev.off()
xyplot(speed~tstamp | factor(score), data=traffic, layout=c(1,3))
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
library(data.table)
# library(zoo)
install.packages(c('lattice','tidyverse','sf','tmap','RColorBrewer','data.table','zoo','xts'))
install.packages(c("lattice", "tidyverse", "sf", "tmap", "RColorBrewer", "data.table", "zoo", "xts"))
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
library(data.table)
install.packages('httpuv')
library(tmap)
install.packages('rgdal')
library(tmap)
install.packages(rgeos)
install.packages('rgeos')
library(tmap)
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
library(data.table)
fpath <- 'C:/Users/Downi/Desktop/2018-04-25_I65_May.csv' # can't read from G-drive, causes issues
traffic <- fread(input=fpath)
# fix up the data
traffic$tstamp <- as.POSIXct(traffic$tstamp, tz='UTC')
#traffic <- complete(traffic, xdid, tstamp) # Complete may not be feasible for much larger data . . .
# 39,283,200 obs before complete
# 39,283,200 obs after complete
# i.e. no missing data! :D But how many for each confidence bin?
traffic <- setDT(traffic)
glimpse(traffic)
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
library(data.table)
fpath <- 'C:/Users/Downi/Desktop/2018-04-25_I65_May.csv' # can't read from G-drive, causes issues
traffic <- fread(input=fpath)
# fix up the data
traffic$tstamp <- as.POSIXct(traffic$tstamp, tz='UTC')
#traffic <- complete(traffic, xdid, tstamp) # Complete may not be feasible for much larger data . . .
# 39,283,200 obs before complete
# 39,283,200 obs after complete
# i.e. no missing data! :D But how many for each confidence bin?
traffic <- setDT(traffic)
# How many segments are there in total
totalSegs <- length(unique(traffic$xdid))
toy <- traffic[1:10000,]
xyplot(speed~tstamp | factor(xdid) + factor(score), data=toy, layout=c(1,3))
View(toy)
xyplot(speed~tstamp | factor(xdid) + factor(score), data=toy, layout=c(1,3,1))
xyplot(speed~tstamp | factor(score) + factor(xdid), data=toy, layout=c(1,3,1))
xyplot(speed~tstamp | factor(score) + factor(xdid), data=toy, layout=c(3,3,1))
order(toy$score)
toy[order(toy$score),]
toy[order(c(toy$score, toy$xdid)),]
toy[with(toy, order(score, xdid)),]
toy[with(toy, order(score, xdid, tstamp)),]
xyplot(speed~tstamp | factor(score) + factor(xdid), data=toy, layout=c(3,3,1))
xyplot(speed~tstamp | factor(score) + factor(xdid), data=toy, layout=c(1,3,1))
xyplot(speed~tstamp | factor(xdid) + factor(score), data=toy, layout=c(1,3,1))
xyplot(speed~tstamp | factor(xdid*score), data=toy, layout=c(1,3,1))
xyplot(speed~tstamp | factor(xdid) + factor(score), data=toy, layout=c(1,2,1))
toy <- traffic[1:10000,]
toy <- toy[which(score==20),]
toy <- traffic[which(score==20),]
hConf <- traffic[which(score==30),]
mConf <- traffic[which(score==20),]
lConf <- traffic[which(score==10),]
rm(toy)
xyplot(speed~tstamp | factor(xdid), data=hConf, layout=c(1,3,1))
length(hConf$xdid)
length(hConf)
length(hConf$tstamp)
summary(lConf)
length(lConf$tstamp)
length(unique(lConf$xdid))
unique(lConf$xdid)
View(lConf)
xyplot(speed~tstamp | factor(xdid), data=lConf, layout=c(1,1,1))
xyplot(speed~tstamp | factor(xdid), data=lConf, layout=c(1,6,1))
xyplot(speed~tstamp | factor(xdid), data=lConf, layout=c(1,3,1))
View(lConf)
levelplot(speed~lon*lat | factor(xdid), data=lConf, layout=c(1,3,1))
levelplot(speed~lon*lat, data=lConf, layout=c(1,3,1))
xyplot(speed~tstamp | factor(xdid), data=lConf, layout=c(1,1,1))
levelplot(speed~lon*lat, data=lConf, layout=c(1,1,1))
toy <- lConf[which(unique(lConf$xdid)),]
toy <- lConf[which(lConf$xdid == unique(lConf$xdid)),]
View(toy)
levelplot(speed~lon*lat | factor(tstamp), data=lConf, layout=c(1,1,1))
levelplot(speed~lon*lat | factor(tstamp), data=lConf, layout=c(6,1,1))
toy <- [,-c('tstamp')]
toy <- lConf[,-c('tstamp')]
unique(toy)
toy <- lConf[,-c('tstamp', 'speed')]
unique(toy)
toy <- lConf[,-c('tstamp', 'speed', 'score', 'PreviousXD', 'NextXD')]
unique(toy)
toy <- lConf[,-c('tstamp', 'speed', 'score', 'Bearing', 'PreviousXD', 'NextXD')]
unique(toy)
toy <- lConf[,c('xdid', 'lat', 'lon')]
unique(toy)
levelplot(xdid~lon*lat, data=toy)
toy <- st_as_sf(toy, coords=c('lon','lat'))
plot(toy)
tm_shape(toy) + tm_dots()
tmap_mode('view')
tm_shape(toy) + tm_dots()
tm_shape(toy) + tm_dots('xdid')
library(lattice)
library(dplyr)
library(tidyr)
library(sf)
library(tmap)
library(RColorBrewer)
library(data.table)
fpath <- 'C:/Users/Downi/Desktop/2018-04-25_I65_May.csv' # can't read from G-drive, causes issues
traffic <- fread(input=fpath)
# fix up the data
traffic$tstamp <- as.POSIXct(traffic$tstamp, tz='UTC')
#traffic <- complete(traffic, xdid, tstamp) # Complete may not be feasible for much larger data . . .
# 39,283,200 obs before complete
# 39,283,200 obs after complete
# i.e. no missing data! :D But how many for each confidence bin?
traffic <- setDT(traffic)
glimpse(traffic)
# How many segments are there in total
totalSegs <- length(unique(traffic$xdid))
# segment t series by confidence level
hConf <- traffic[which(score==30),]
mConf <- traffic[which(score==20),]
lConf <- traffic[which(score==10),]
# Low confidence segments
summary(lConf)
length(unique(lConf$xdid)) # only 3 segments are poor quality of the 880 total
unique(lConf$xdid)
lConf2 <- st_as_sf(unique(lConf[,c('xdid', 'lon', 'lat')]), coords=c('lon','lat'))
qqmath(speed, data=lConf)
qqmath(lConf$speed)
length(hConf)/length(traffic)
length(hConf$xdid)/length(traffic$xdid)
length(mConf$xdid)/length(traffic$xdid)
length(lConf$xdid)/length(traffic$xdid)
lConf2 <- st_as_sf(unique(lConf[,c('xdid', 'lon', 'lat')]), coords=c('lon','lat'))
tmap_mode('view')
tm_shape(lConf2) + tm_dots('xdid', style='cat')
lConf$weekday <- weekdays(lConf$tstamp)
View(lConf)
xyplot(speed~weekday, data=lConf)
class(lConf)
tmp <- lConf[,,by='weekday']
xyplot(~weekday, data=lConf)
xyplot(xdid~weekday, data=lConf)
xyplot(length(speed)~weekday, data=lConf)
xyplot(speed~tstamp | factor(weekday), data=lConf)
xyplot(speed~tstamp | factor(xdid) + factor(weekday), data=lConf)
xyplot(speed~tstamp | factor(xdid) + factor(weekday), data=lConf, layout=c(4,4))
?factor
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')), data=lConf, layout=c(4,4))
weekdaySeq <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(4,4))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,4))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,6))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,7))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,7), cex=.6)
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,7), par.strip.text=list(cex=.6))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.8))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.7))
png('./figures/lconfByDayofWeek.png')
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.7))
dev.off()
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq), xlim=seq(0,70,10),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.7))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq), ylim=seq(0,70,10),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.7))
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq), ylim=seq(0,70,10),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.7),
main='Speeds By Day of Week and Segment ID', xlab='Time Stamp', ylab='Speed')
allSegs <- unique(traffic[,c('xdid','lon','lat')])
allSegs <- traffic[,c('xdid','lon','lat')] %>% unique %>% st_as_sf(coords=c('lon','lat'))
library(tmap); tmap_mode('view');
tm_shape(allSegs) + tm_dots()
lConf$hour <- hour(lConf$tstamp)
table(lConf$xdid, lConf$hour)
data.frame(table(lConf$xdid, lConf$weekday))
table(lConf$xdid, lConf$weekday)
data.table(table(lConf$xdid, lConf$weekday))
data.frame(table(lConf$xdid, lConf$weekday))
lConf.weekday <- data.frame(table(lConf$xdid, lConf$weekday))
colnames(lConf.weekday) <- c('xdid','weekday', 'frequency')
barchart(lConf.weekday)
?barchart
barchart(frequency~weekday | factor(xdid), data=lConf.weekday)
lConf.weekday$weekday <- factor(lConf.weekday$weekday, levels=weekdaySeq)
barchart(frequency~weekday | factor(xdid), data=lConf.weekday)
barchart(frequency~weekday | factor(xdid), data=lConf.weekday,
scales=list(x=list(rot=90)))
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
xlab='Day of Week',
scales=list(x=list(rot=90) ) )
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
scales=list(x=list(rot=90) ) )
png('./figures/lConf_Frequency_ByDayOfWeek.png')
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
scales=list(x=list(rot=90) ) )
dev.off()
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
scales=list(x=list(rot=90) ), layout=c(1,3,1) )
png('./figures/lConf_Frequency_ByDayOfWeek.png')
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
scales=list(x=list(rot=90) ), layout=c(1,3,1) )
dev.off()
# describe by hour
lConf$hour <- hour(lConf$tstamp)
lConf.hour <- data.frame(table(lConf$xdid, lConf$hour))
lConf.hour
colnames(lConf.hour) <- c('xdid','hour','frequency')
barchart(frequency~hour | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
scales=list(x=list(rot=90) ), layout=c(1,3,1) )
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
scales=list(x=list(rot=90) ), layout=c(1,3,1) )
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) )
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,1600))
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
ylim=c(0,2000), scales=list(x=list(rot=90) ), layout=c(1,3,1) )
png('./figures/lConf_Frequency_ByDayOfWeek.png')
barchart(frequency~weekday | factor(xdid), data=lConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
ylim=c(0,2000), scales=list(x=list(rot=90) ), layout=c(1,3,1) )
dev.off()
xyplot(speed~tstamp | factor(xdid) + factor(weekday, levels=weekdaySeq), ylim=seq(0,70,10),
data=lConf, layout=c(3,7), pch=16, col='deepskyblue3', par.strip.text=list(cex=.7),
main='Speeds By Day of Week and Segment ID', xlab='Time Stamp', ylab='Speed')
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
png('./figures/lConf_Frequency_ByHour.png')
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
dev.off()
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency', xlab='Hour'
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency', xlab='Hour',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
png('./figures/lConf_Frequency_ByHour.png')
barchart(frequency~hour | factor(xdid), data=lConf.hour, ylab='Frequency', xlab='Hour',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
layout=c(1,3,1) , ylim=c(0,2000))
dev.off()
# Medium confidence segments
summary(mConf)
mConf$weekday <- weekdays(mConf$tstamp)
mConf.weekday <- data.frame(table(mConf$xdid, mConf$weekday))
View(mConf.weekday)
colnames(mConf.weekday) <- c('xdid','weekday', 'frequency')
mConf.weekday$weekday <- factor(lConf.weekday$weekday, levels=weekdaySeq)
mConf.weekday$weekday <- factor(mConf.weekday$weekday, levels=weekdaySeq)
mConf$weekday <- weekdays(mConf$tstamp)
mConf.weekday <- data.frame(table(mConf$xdid, mConf$weekday))
colnames(mConf.weekday) <- c('xdid','weekday', 'frequency')
mConf.weekday$weekday <- factor(mConf.weekday$weekday, levels=weekdaySeq)
barchart(frequency~weekday | factor(xdid), data=mConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
ylim=c(0,2000), scales=list(x=list(rot=90) ), layout=c(1,3,1) )
barchart(frequency~weekday, data=mConf.weekday, ylab='Frequency',
main='Frequency of Low Confidence Occurrences by Day of Week and XDID',
ylim=c(0,2000), scales=list(x=list(rot=90) ), layout=c(1,3,1) )
View(mConf.weekday)
mConf.weekday <- data.frame(table(mConf$xdid, mConf$lon, mConf$lat, mConf$weekday))
mConf.weekday <- data.frame(table(C(mConf$xdid, mConf$lon, mConf$lat), mConf$weekday))
mConf.weekday <- data.frame(table(mConf$xdid, mConf$weekday))
colnames(mConf.weekday) <- c('xdid','weekday', 'frequency')
mConf.weekday$weekday <- factor(mConf.weekday$weekday, levels=weekdaySeq)
levelplot(frequency~xdid*weekday, data=mConf.weekday)
?sample
levelplot(frequency~xdid*weekday, data=sample(mConf.weekday, n=100))
levelplot(frequency~xdid*weekday, data=base::sample(mConf.weekday, n=100))
levelplot(frequency~xdid*weekday, data=sample(mConf.weekday, size=100))
levelplot(frequency~xdid*weekday, data=sample(mConf.weekday, size=100, replace=T))
levelplot(frequency~xdid*weekday, data=sample(mConf.weekday, size=10, replace=T))
densityplot(frequency~weekday, data=mConf.weekday)
densityplot(frequency, data=mConf.weekday)
densityplot(mConf.weekday$frequency, data=mConf.weekday)
densityplot(mConf.weekday$frequency)
q <- quantiles(mConf.weekday$frequency, prob=seq(0,1,0.01))
q <- quantile(mConf.weekday$frequency, prob=seq(0,1,0.01))
plot(q)
q <- quantile(mConf.weekday$frequency, prob=seq(0,1,0.001))
plot(q)
densityplot(mConf.weekday$frequency)
table(mConf.weekday$weekday, mConf.weekday$frequency)
class(mConf.weekday)
mConf.weekday <- data.table(table(mConf$xdid, mConf$weekday))
mConf.weekday
colnames(mConf.weekday) <- c('xdid','weekday', 'frequency')
mConf.weekday$weekday <- factor(mConf.weekday$weekday, levels=weekdaySeq)
densityplot(mConf.weekday$frequency)
densityplot(mConf.weekday$frequency)
table(mConf.weekday$weekday, mConf.weekday$frequency)
mConf.weekday[,sum(frequency),by=c('weekday')]
mConfWeekday.count <- data.table(mConf.weekday[,sum(frequency),by=c('weekday')])
colnames(mConfWeekday.count) <- c('weekday', 'count')
mConfWeekday.count <- factor(mConfWeekday.count, levels='weekdaySeq')
mConfWeekday.count
mConfWeekday.count
mConfWeekday.count <- data.table(mConf.weekday[,sum(frequency),by=c('weekday')])
colnames(mConfWeekday.count) <- c('weekday', 'count')
mConfWeekday.count$weekday <- factor(mConfWeekday.count$weekday, levels='weekdaySeq')
mConfWeekday.count
mConfWeekday.count <- data.table(mConf.weekday[,sum(frequency),by=c('weekday')])
colnames(mConfWeekday.count) <- c('weekday', 'count')
mConfWeekday.count
mConfWeekday.count$weekday <- factor(mConfWeekday.count$weekday, levels=weekdaySeq)
mConfWeekday.count
barchart(mConfWeekday.count)
barchart(count~weekday, data=mConfWeekday.count)
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500))
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500), options=list(scipen=5))
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500), options=list(scipen=8))
options
options(scipen=7)
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500))
tmp <- mConfWeekday.count
tmp$count/880
barchart(count/length(unique(weekday))~weekday, data=mConfWeekday.count,
ylim=seq(0,500000,500),
main='Medium Confidence Segment by ')
barchart(count/length(unique(weekday))~weekday, data=mConfWeekday.count,
ylim=seq(0,length(unique(weekday)),10),
main='Medium Confidence Segment by ')
barchart(count/length(unique(weekday))~weekday, data=mConfWeekday.count,
ylim=seq(0,length(unique(mConfWeekday.count$weekday)),10),
main='Medium Confidence Segment by ')
barchart(count/length(unique(weekday))~weekday, data=mConfWeekday.count,
ylim=seq(0,880,10),
main='Medium Confidence Segment by ')
tmp <- mConfWeekday.count
tmp$count/880
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500),
main='Medium Confidence Segment by ')
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500),
main='Medium Confidence Segment by Instances for all XDID')
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500),
main='Medium Confidence Segment by Instances for all XDID',
xlab='Day of Week', ylab='Frequency')
png('./figures/mConfByDayofWeek.png')
barchart(count~weekday, data=mConfWeekday.count, ylim=seq(0,500000,500),
main='Medium Confidence Segment by Instances for all XDID',
xlab='Day of Week', ylab='Frequency')
dev.off()
mConf$hour <- hour(mConf$tstamp)
mConf.hour <- data.table(table(mConf$xdid, mConf$hour))
View(mConf.hour)
colnames(mConf.weekday) <- c('xdid','hour', 'frequency')
mConfHour.count <- data.table(mConf.hour[,sum(frequency),by=c('hour')])
colnames(mConf.hour) <- c('xdid','hour', 'frequency')
mConfHour.count <- data.table(mConf.hour[,sum(frequency),by=c('hour')])
colnames(mConfWeekday.count) <- c('weekday', 'count')
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
xlab='Day of Week', ylab='Frequency')
mConf$hour <- hour(mConf$tstamp)
mConf.hour <- data.table(table(mConf$xdid, mConf$hour))
colnames(mConf.hour) <- c('xdid','hour', 'frequency')
mConfHour.count <- data.table(mConf.hour[,sum(frequency),by=c('hour')])
colnames(mConfHour.count) <- c('weekday', 'count')
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
xlab='Day of Week', ylab='Frequency')
View(mConfHour.count)
colnames(mConfHour.count) <- c('hour', 'count')
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
xlab='Day of Week', ylab='Frequency')
barchart(count~as.numeric(hour), data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
xlab='Day of Week', ylab='Frequency')
barchart(count~as.numeric(hour), data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID')
barchart(as.numeric(hour)~count, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID')
?barchart
barchart(as.numeric(hour), data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
ylab='Hour', xlab='Frequency')
mConf$hour <- hour(mConf$tstamp)
mConf.hour <- data.table(table(mConf$xdid, mConf$hour))
colnames(mConf.hour) <- c('xdid','hour', 'frequency')
mConfHour.count <- data.table(mConf.hour[,sum(frequency),by=c('hour')])
colnames(mConfHour.count) <- c('hour', 'count')
barchart(as.numeric(hour), data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
ylab='Hour', xlab='Frequency')
barchart(count~as.numeric(hour), data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
ylab='Hour', xlab='Frequency')
barchart(as.numeric(hour)~count, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
ylab='Hour', xlab='Frequency')
barchart(hour~count, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
ylab='Hour', xlab='Frequency')
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID',
ylab='Hour', xlab='Frequency')
hourSeq <- c('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14',
'15', '16', '17', '18', '19', '20', '21', '22', '23')
mConfHour.count$hour <- factor(mConfHour.count$hour, levels=hourSeq)
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID')
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID', xlab='Hour',
ylab='Frequency')
png('./figures/mConf_ByHourofDay.png')
barchart(count~hour, data=mConfHour.count,
main='Medium Confidence Segment by Instances for all XDID', xlab='Hour',
ylab='Frequency')
dev.off()
